// Generated by CoffeeScript 1.9.0
(function() {
  var constructHeader, dataToArray, findContentTypeFile, isNotEmpty;

  constructHeader = function(protocole, code, ext, lengthFile) {
    var contentExt, contentLength, contentSubType, contentType;
    contentType = findContentTypeFile(ext);
    contentSubType = contentType['replace'] === null ? 'plain' : contentType['replace'];
    contentLength = lengthFile ? "Content-Length:" + lengthFile + "\r\n" : "";
    contentExt = ext ? "Content-Type:" + contentType['type'] + '/' + contentSubType + "\r\n" : "\r\n";
    return protocole + " " + code + " " + statusCode[code] + "\r\n" + contentExt + contentLength + "Connection: close" + "\r\n" + "\r\n";
  };

  dataToArray = function(data) {
    var array, i, _i, _ref;
    array = data.toString().split("\r\n");
    array = array.filter(isNotEmpty);
    for (i = _i = 0, _ref = array.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      array[i] = array[i].split(" ");
    }
    return array;
  };

  findContentTypeFile = function(ext) {
    var contentType, i, index, options, tab;
    if (!(ext === null)) {
      for (i in contentTypeMap) {
        tab = contentTypeMap[i];
        index = tab['tab'].indexOf(ext);
        if (index >= 0) {
          return contentType = {
            'type': i,
            'replace': tab['replace'] === void 0 ? ext : tab['replace']
          };
        }
      }
      return options = {
        'type': 'text',
        'replace': null
      };
      return options = {
        'type': 'text',
        'replace': null
      };
    }
  };

  isNotEmpty = function(element) {
    return !(element === '');
  };

}).call(this);
