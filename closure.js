// Generated by CoffeeScript 1.9.0
(function() {
  var closure, create, dataSize, errorTab, file, fn, fs, index, newTab, run, stats, statusCode, str, value;

  fs = require('fs');

  statusCode = {
    200: "OK",
    201: "Created",
    202: "Accepted",
    204: "No Content",
    301: "Moved Permanently",
    302: "Moved Temporarily",
    304: "Not Modified",
    400: "Bad Request",
    401: "Unauthorized",
    403: "Forbidden",
    404: "Not Found",
    500: "Internal Server Error",
    501: "Not Implemented",
    502: "Bad Gateway",
    503: "Service Unavailable"
  };

  errorTab = (function() {
    var _results;
    _results = [];
    for (index in statusCode) {
      value = statusCode[index];
      _results.push(parseInt(index));
    }
    return _results;
  })();

  str = '';

  closure = [];

  fn = function() {
    return setTimeout((function() {
      return console.log(str);
    }), 0);
  };

  create = function() {
    var i, _i, _results;
    _results = [];
    for (i = _i = 0; _i <= 10; i = _i += 1) {
      str = str.concat("i:for = ", i, '\n');
      _results.push((closure[i] = function(tmp) {
        return setTimeout((function() {
          return str = str.concat("i = ", i, "\n");
        }), 0);
      })(i));
    }
    return _results;
  };

  run = function() {
    var f, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = closure.length; _i < _len; _i++) {
      f = closure[_i];
      _results.push(f());
    }
    return _results;
  };

  create();

  newTab = errorTab.map(function(value) {
    return value * 2;
  });

  file = fs.createReadStream('./min1.html');

  stats = fs.statSync("./min1.html");

  dataSize = stats["size"];

  console.log(dataSize);

  file.on('readable', function() {
    var data;
    console.log('readable : fire! !! !!!!');
    data = file.read(dataSize);
    if (data) {
      console.log('readable size = ', data.length);
      return console.log(data.toString());
    }
  });

}).call(this);
